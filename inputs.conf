[dbmon-tail://sccm/ta_sccm_arp]
host = sccm
index = sccm
interval = auto
output.format = kv
output.timestamp = 1
output.timestamp.column = TimeStamp
output.timestamp.format = yyyy-MM-dd hh:mm:ss
query = SELECT [ResourceID]\r\n      ,[TimeStamp]\r\n      ,DisplayName\r\n      ,InstallDate\r\n      ,ProductID\r\n      ,Publisher\r\n      ,ProductVersion\r\n	  ,[Active]\r\n	  ,[Action]\r\nFROM\r\n(SELECT [ResourceID]\r\n      ,[TimeStamp]\r\n      ,[DisplayName0] as DisplayName\r\n      ,[InstallDate0] as InstallDate\r\n      ,[ProdID0] as ProductID\r\n      ,[Publisher0] as Publisher\r\n      ,[Version0] as ProductVersion\r\n	  ,[Active]=1\r\n	  ,[Action]='Detected'\r\nFROM [v_GS_ADD_REMOVE_PROGRAMS]\r\nUNION ALL\r\nSELECT [ResourceID]\r\n      ,[TimeStamp]\r\n      ,[DisplayName0] as DisplayName\r\n      ,[InstallDate0] as InstallDate\r\n      ,[ProdID0] as ProductID\r\n      ,[Publisher0] as Publisher\r\n      ,[Version0] as ProductVersion\r\n	  ,[Active]=1\r\n	  ,[Action]='Detected'\r\nFROM [v_GS_ADD_REMOVE_PROGRAMS_64]\r\nUNION ALL\r\nSELECT [ResourceID]\r\n      ,[TimeStamp]\r\n      ,[DisplayName0] as DisplayName\r\n      ,[InstallDate0] as InstallDate\r\n      ,[ProdID0] as ProductID\r\n      ,[Publisher0] as Publisher\r\n      ,[Version0] as ProductVersion\r\n	  ,[Active]=0\r\n	  ,[Action]='Removed'\r\nFROM [v_HS_ADD_REMOVE_PROGRAMS]\r\nWHERE DisplayName0 IS NOT NULL\r\nUNION ALL\r\nSELECT [ResourceID]\r\n      ,[TimeStamp]\r\n      ,[DisplayName0] as DisplayName\r\n      ,[InstallDate0] as InstallDate\r\n      ,[ProdID0] as ProductID\r\n      ,[Publisher0] as Publisher\r\n      ,[Version0] as ProductVersiond\r\n	  ,[Active]=0\r\n	  ,[Action]='Removed'\r\nFROM [v_HS_ADD_REMOVE_PROGRAMS_64]\r\nWHERE DisplayName0 IS NOT NULL) as arp\r\n{{WHERE arp.$rising_column$ > ?}}
sourcetype = sccm:hw:arp
tail.rising.column = TimeStamp
disabled = 1

[dbmon-tail://sccm/ta_sccm_arp_change_dbinput]
host = sccm
index = sccm
interval = auto
output.format = kv
output.timestamp = 1
output.timestamp.column = TimeStamp
output.timestamp.format = yyyy-MM-dd hh:mm:ss
query = SELECT [ResourceID]\r\n      ,[TimeStamp]\r\n      ,DisplayName\r\n      ,InstallDate\r\n      ,ProductID\r\n      ,Publisher\r\n      ,ProductVersion\r\n	  ,[action]\r\nFROM\r\n(SELECT [ResourceID]\r\n      ,[TimeStamp]\r\n      ,[DisplayName0] as DisplayName\r\n      ,[InstallDate0] as InstallDate\r\n      ,[ProdID0] as ProductID\r\n      ,[Publisher0] as Publisher\r\n      ,[Version0] as ProductVersion\r\n	  ,[action]='created'\r\nFROM [v_GS_ADD_REMOVE_PROGRAMS]\r\nWHERE DATEDIFF(day, TimeStamp, GETDATE()) < 7\r\nUNION ALL\r\nSELECT [ResourceID]\r\n      ,[TimeStamp]\r\n      ,[DisplayName0] as DisplayName\r\n      ,[InstallDate0] as InstallDate\r\n      ,[ProdID0] as ProductID\r\n      ,[Publisher0] as Publisher\r\n      ,[Version0] as ProductVersion\r\n	  ,[action]='created'\r\nFROM [v_GS_ADD_REMOVE_PROGRAMS_64]\r\nWHERE DATEDIFF(day, TimeStamp, GETDATE()) < 7\r\nUNION ALL\r\nSELECT [ResourceID]\r\n      ,[TimeStamp]\r\n      ,[DisplayName0] as DisplayName\r\n      ,[InstallDate0] as InstallDate\r\n      ,[ProdID0] as ProductID\r\n      ,[Publisher0] as Publisher\r\n      ,[Version0] as ProductVersion\r\n	  ,[action]='deleted'\r\nFROM [v_HS_ADD_REMOVE_PROGRAMS]\r\nWHERE DisplayName0 IS NOT NULL\r\nAND DATEDIFF(day, TimeStamp, GETDATE()) < 7\r\nUNION ALL\r\nSELECT [ResourceID]\r\n      ,[TimeStamp]\r\n      ,[DisplayName0] as DisplayName\r\n      ,[InstallDate0] as InstallDate\r\n      ,[ProdID0] as ProductID\r\n      ,[Publisher0] as Publisher\r\n      ,[Version0] as ProductVersiond\r\n	  ,[action]='deleted'\r\nFROM [v_HS_ADD_REMOVE_PROGRAMS_64]\r\nWHERE DisplayName0 IS NOT NULL\r\nAND DATEDIFF(day, TimeStamp, GETDATE()) < 7\r\n) as arp\r\n{{WHERE arp.$rising_column$ > ?}}
sourcetype = sccm:change:arp
tail.rising.column = TimeStamp
disabled = 1

[dbmon-tail://sccm/ta_sccm_malware_dbinput]
host = sccm
index = sccm
interval = auto
output.format = kv
output.timestamp = 1
output.timestamp.column = timestamp
output.timestamp.format = yyyy-MM-dd HH:mm:ss.SSS
query = SELECT \r\n  N'SystemCenterEndpointProtection' AS [vendor_product],\r\n  N'SecurityIncident' AS [type],\r\n  N'MalwareInfection' AS [action_type],\r\n  m.ResourceID as [resourceid], \r\n  sys.Netbios_Name0 as [dest_name],\r\n  sys.Resource_Domain_OR_Workgr0 as [dest_nt_domain],\r\n  m.DetectionTime AS [timestamp],\r\n  m.DetectionTime as [date], \r\n  m.ActionTime [actiontime], \r\n  m.ProductVersion [product_version], \r\n  m.DetectionID [detectionid], \r\n  CASE  \r\n    WHEN m.DetectionSource = 0 THEN N'Unknown' \r\n    WHEN m.DetectionSource = 1 THEN N'User' \r\n    WHEN m.DetectionSource = 2 THEN N'System' \r\n    WHEN m.DetectionSource = 3 THEN N'Realtime' \r\n    WHEN m.DetectionSource = 4 THEN N'IOAV' \r\n    WHEN m.DetectionSource = 5 THEN N'NIS' \r\n    WHEN m.DetectionSource = 6 THEN N'BHO'  \r\n  END AS [detection_source],\r\n  m.UserName as [user],\r\n  m.Process AS [target_process], \r\n  m.Path AS file_path, \r\n  ISNULL(metaData.Name,N'UnknownThreat') AS [signature], \r\n  IsNULL(sev.Severity,N'Unknown') AS [severity], \r\n  IsNULL(cat.Category,N'Invalid') AS category,\r\n  CASE  \r\n    WHEN CleaningAction = 0 THEN N'Unknown' \r\n    WHEN CleaningAction = 1 THEN N'Clean' \r\n    WHEN CleaningAction = 2 THEN N'Quarantine' \r\n    WHEN CleaningAction = 3 THEN N'Remove' \r\n    WHEN CleaningAction = 6 THEN N'Allow' \r\n    WHEN CleaningAction = 8 THEN N'UserDefined' \r\n    WHEN CleaningAction = 9 THEN N'NoAction' \r\n    WHEN m.CleaningAction = 10 THEN N'Block' \r\n  END AS [action_type], \r\n  CASE  \r\n    WHEN CleaningAction = 0 THEN N'unknown' \r\n    WHEN CleaningAction = 1 THEN N'blocked' \r\n    WHEN CleaningAction = 2 THEN N'blocked' \r\n    WHEN CleaningAction = 3 THEN N'blocked' \r\n    WHEN CleaningAction = 6 THEN N'allowed' \r\n    WHEN CleaningAction = 8 THEN N'deferred' \r\n    WHEN CleaningAction = 9 THEN N'allowed' \r\n    WHEN m.CleaningAction = 10 THEN N'blocked' \r\n  END AS [action],\r\n  CASE       \r\n    WHEN m.ActionSuccess =1 THEN N'True' \r\n    ELSE N'False' \r\n  END AS [action_result], \r\n  m.ErrorCode AS [action_error_code], \r\n  CASE \r\n    WHEN m.PendingActions & 4 <> 0 THEN N'FullScan' \r\n    WHEN m.PendingActions & 8 <> 0 THEN N'Reboot' \r\n    WHEN m.PendingActions & 16 <> 0 THEN N'SettingsModified' \r\n    WHEN m.PendingActions & 32768 <> 0 THEN N'SystemSweeper' \r\n    ELSE N'NoActionRequired' \r\n  END AS [pending_action] , \r\n  CASE  \r\n    WHEN m.ActionSuccess = 0 THEN N'True' \r\n    ELSE N'False' \r\n  END AS [is_active] \r\nFROM [v_GS_Threats] m\r\nLEFT JOIN v_R_System sys on m.ResourceID = sys.ResourceID\r\nLEFT JOIN v_ThreatCatalog metadata on m.ThreatID = metadata.ThreatID\r\nLEFT JOIN v_ThreatSeverities sev on metaData.SeverityID=sev.SeverityID \r\nLEFT JOIN v_ThreatCategories cat on metaData.CategoryID=cat.CategoryID \r\n{{WHERE m.$rising_column$ > ?}}
sourcetype = sccm:malware
tail.rising.column = timestamp
disabled = 1

[dbmon-tail://sccm_big/ta_sccm_malware_trn2]
host = sccm
index = sccm
interval = auto
output.format = kv
output.timestamp = 0
output.timestamp.column = DetectionTime
output.timestamp.format = yyyy-MM-dd hh:mm:ss
query = SELECT 'SystemCenterEndpointProtection' AS vendor_product,\r\n  'SecurityIncident' AS type,\r\n  'MalwareInfection' AS action_type,\r\n  m.ResourceID as resourceid, \r\n  sys.Netbios_Name0 as dest_name,\r\n  sys.Resource_Domain_OR_Workgr0 as dest_nt_domain,\r\n  m.DetectionTime AS 'timestamp',\r\n  m.DetectionTime as 'date',\r\n  m.DetectionTime, \r\n  m.ActionTime actiontime, \r\n  m.ProductVersion product_version, \r\n  m.DetectionID detectionid, \r\n  CASE  \r\n    WHEN m.DetectionSource = 0 THEN 'Unknown' \r\n    WHEN m.DetectionSource = 1 THEN 'User' \r\n    WHEN m.DetectionSource = 2 THEN 'System' \r\n    WHEN m.DetectionSource = 3 THEN 'Realtime' \r\n    WHEN m.DetectionSource = 4 THEN 'IOAV' \r\n    WHEN m.DetectionSource = 5 THEN 'NIS' \r\n    WHEN m.DetectionSource = 6 THEN 'BHO'  \r\n  END AS detection_source,\r\n  m.UserName as 'user',\r\n  m.Process AS target_process, \r\n  m.Path AS file_path, \r\n  ISNULL(metaData.Name,'UnknownThreat') AS signature, \r\n  IsNULL(sev.Severity,'Unknown') AS severity, \r\n  IsNULL(cat.Category,'Invalid') AS category,\r\n  CASE  \r\n    WHEN CleaningAction = 0 THEN 'Unknown' \r\n    WHEN CleaningAction = 1 THEN 'Clean' \r\n    WHEN CleaningAction = 2 THEN 'Quarantine' \r\n    WHEN CleaningAction = 3 THEN 'Remove' \r\n    WHEN CleaningAction = 6 THEN 'Allow' \r\n    WHEN CleaningAction = 8 THEN 'UserDefined' \r\n    WHEN CleaningAction = 9 THEN 'NoAction' \r\n    WHEN m.CleaningAction = 10 THEN 'Block' \r\n  END AS action_type, \r\n  CASE  \r\n    WHEN CleaningAction = 0 THEN 'unknown' \r\n    WHEN CleaningAction = 1 THEN 'blocked' \r\n    WHEN CleaningAction = 2 THEN 'blocked' \r\n    WHEN CleaningAction = 3 THEN 'blocked' \r\n    WHEN CleaningAction = 6 THEN 'allowed' \r\n    WHEN CleaningAction = 8 THEN 'deferred' \r\n    WHEN CleaningAction = 9 THEN 'allowed' \r\n    WHEN m.CleaningAction = 10 THEN 'blocked' \r\n  END AS action,\r\n  CASE       \r\n    WHEN m.ActionSuccess =1 THEN 'True' \r\n    ELSE N'False' \r\n  END AS action_result, \r\n  m.ErrorCode AS action_error_code, \r\n  CASE \r\n    WHEN m.PendingActions & 4 <> 0 THEN 'FullScan' \r\n    WHEN m.PendingActions & 8 <> 0 THEN 'Reboot' \r\n    WHEN m.PendingActions & 16 <> 0 THEN 'SettingsModified' \r\n    WHEN m.PendingActions & 32768 <> 0 THEN 'SystemSweeper' \r\n    ELSE 'NoActionRequired' \r\n  END AS pending_action , \r\n  CASE  \r\n    WHEN m.ActionSuccess = 0 THEN 'True' \r\n    ELSE 'False' \r\n  END AS is_active \r\nFROM v_GS_Threats m\r\nLEFT JOIN v_R_System sys on m.ResourceID = sys.ResourceID\r\nLEFT JOIN v_ThreatCatalog metadata on m.ThreatID = metadata.ThreatID\r\nLEFT JOIN v_ThreatSeverities sev on metaData.SeverityID=sev.SeverityID \r\nLEFT JOIN v_ThreatCategories cat on metaData.CategoryID=cat.CategoryID \r\n{{WHERE $rising_column$ > ?}}
sourcetype = sccm:malware
tail.rising.column = DetectionTime
disabled = 1

[dbmon-tail://sccm_big/ta_test_malware]
host = sccm
index = sccm
interval = auto
output.format = kv
output.timestamp = 1
output.timestamp.column = DetectionTime
output.timestamp.format = yyyy-MM-dd hh:mm:ss
query = SELECT 'SystemCenterEndpointProtection' AS vendor_product, 'SecurityIncident' AS [type], 'MalwareInfection' AS action_type, m.ResourceID as resourceid, sys.Netbios_Name0 as dest_name, sys.Resource_Domain_OR_Workgr0 as dest_nt_domain, m.DetectionTime, m.DetectionTime as [date], m.ActionTime actiontime, m.ProductVersion product_version, m.DetectionID detectionid, CASE WHEN m.DetectionSource = 0 THEN 'unknown' WHEN m.DetectionSource = 1 THEN 'user' WHEN m.DetectionSource = 2 THEN 'system' WHEN m.DetectionSource = 3 THEN 'realtime' WHEN m.DetectionSource = 4 THEN 'ioav' WHEN m.DetectionSource = 5 THEN 'nis' WHEN m.DetectionSource = 6 THEN 'bho' END AS detection_source, m.UserName as [user], m.Process AS target_process, m.Path AS file_path, ISNULL(metaData.Name,'unknown') AS [signature], IsNULL(sev.Severity,'unknown') AS severity, IsNULL(cat.Category,'invalid') AS category, CASE WHEN CleaningAction = 0 THEN 'unknown' WHEN CleaningAction = 1 THEN 'clean' WHEN CleaningAction = 2 THEN 'quarantine' WHEN CleaningAction = 3 THEN 'remove' WHEN CleaningAction = 6 THEN 'allow' WHEN CleaningAction = 8 THEN 'userdefined' WHEN CleaningAction = 9 THEN 'noaction' WHEN m.CleaningAction = 10 THEN N'block' END AS action_type, CASE WHEN CleaningAction = 0 THEN 'unknown' WHEN CleaningAction = 1 THEN 'blocked' WHEN CleaningAction = 2 THEN 'deferred' WHEN CleaningAction = 3 THEN 'blocked' WHEN CleaningAction = 6 THEN 'allowed' WHEN CleaningAction = 8 THEN 'unknown' WHEN CleaningAction = 9 THEN 'allowed' WHEN m.CleaningAction = 10 THEN N'blocked' END AS [action], CASE WHEN m.ActionSuccess =1 THEN 'true' ELSE 'false' END AS action_result, m.ErrorCode AS action_error_code, CASE WHEN m.PendingActions & 4 <> 0 THEN 'fullscan' WHEN m.PendingActions & 8 <> 0 THEN 'reboot' WHEN m.PendingActions & 16 <> 0 THEN 'settingsmodified' WHEN m.PendingActions & 32768 <> 0 THEN 'systemsweeper' ELSE 'noaction' END AS pending_action FROM v_GS_Threats m LEFT JOIN v_R_System sys on m.ResourceID = sys.ResourceID LEFT JOIN v_ThreatCatalog metadata on m.ThreatID = metadata.ThreatID LEFT JOIN v_ThreatSeverities sev on metaData.SeverityID=sev.SeverityID  LEFT JOIN v_ThreatCategories cat on metaData.CategoryID=cat.CategoryID {{WHERE m.$rising_column$ > ?}}
sourcetype = test:sccm:malware
tail.rising.column = DetectionTime
disabled = 1

[dbmon-tail://sccm_shh/sccm_status_message_dbinput]
host = sccm
index = sccm_status
interval = 1m
output.format = kv
output.timestamp = 1
output.timestamp.column = timestamp
output.timestamp.format = yyyy-MM-dd HH:mm:ss.SSS
query = WITH attr AS\r\n(SELECT recordid,\r\n	[400] AS [packageid],\r\n	[401] AS [advertisementid],\r\n	[402] AS [collectionid],\r\n	[403] AS [username],\r\n	[404] AS [dp],\r\n	[405] AS [policyid],\r\n	[406] AS [policyassignmentid],\r\n	[407] AS [meter_ruleid],\r\n	[408] AS [client_sms_uniqueid],\r\n	[409] AS [site_code],\r\n	[410] AS [package_version],\r\n	[411] AS [time_key],\r\n	[412] AS [unique_updateid],\r\n	[413] AS [productid],\r\n	[414] AS [ci_assignmentid],\r\n	[415] AS [objectid],\r\n	[416] AS [object_type],\r\n	[417] AS [sdm_typeid],\r\n	[418] AS [sdm_type_version],\r\n	[419] AS [update_source_uniqueid],\r\n	[420] AS [collection_extended_propsid],\r\n	[421] AS [wol_object_type],\r\n	[422] AS [wol_batchid],\r\n	[423] AS [machine_extended_propsid],\r\n	[424] AS [wol_num_requests],\r\n	[425] AS [unknown_machine],\r\n	[426] AS [mac_addresses],\r\n	[427] AS [smbiosid]\r\nFROM \r\n	(Select RecordId, AttributeId, AttributeValue from v_StatMsgAttributes) as s\r\n	PIVOT (MAX(AttributeValue) FOR [AttributeId] IN ([400], [401], [402], [403], [404], [405], [406], [407], [408], [409], [410], [411], [412], [413], [414], [415], [416], [417], [418], [419], [420], [421], [422], [423], [424], [425], [426], [427])) as piv\r\n)\r\nSELECT msg.recordid,\r\n  convert(datetime,SWITCHOFFSET(CONVERT(DATETIMEOFFSET(3), msg.[time] ), DATENAME(TzOffset, SYSDATETIMEOFFSET()))) As [timestamp],\r\n  msg.[time] as [timestamputc],\r\n  msg.messageid,\r\n  severity = \r\n    CASE msg.severity\r\n      WHEN 1073741824 THEN 'informational'\r\n	  WHEN -1073741824 THEN 'error'\r\n	  WHEN -2147483648 THEN 'warning'\r\n    END,\r\n  msg.severity AS severityid,\r\n  msg.machinename,\r\n  msg.sitecode,\r\n  msg.modulename,\r\n  msg.component,\r\n  replace(strings.insstring1,'"','') as string1,\r\n  replace(strings.insstring2,'"','') as string2,\r\n  replace(strings.insstring3,'"','') as string3,\r\n  replace(strings.insstring4,'"','') as string4,\r\n  replace(strings.insstring5,'"','') as string5,\r\n  replace(strings.insstring6,'"','') as string6,\r\n  replace(strings.insstring7,'"','') as string7,\r\n  replace(strings.insstring8,'"','') as string8,\r\n  replace(strings.insstring9,'"','') as string9,\r\n  replace(strings.insstring10,'"','') as string10,\r\n  packageid, \r\n  advertisementid, \r\n  collectionid, \r\n  username, \r\n  replace(dp,'"','') as dp, \r\n  policyid, \r\n  policyassignmentid, \r\n  meter_ruleid, \r\n  client_sms_uniqueid, \r\n  site_code, \r\n  package_version, \r\n  time_key, \r\n  unique_updateid, \r\n  productid, \r\n  ci_assignmentid, \r\n  objectid, \r\n  object_type, \r\n  sdm_typeid, \r\n  sdm_type_version, \r\n  update_source_uniqueid, \r\n  collection_extended_propsid, \r\n  wol_object_type, \r\n  wol_batchid, \r\n  machine_extended_propsid, \r\n  wol_num_requests, \r\n  unknown_machine, \r\n  mac_addresses, \r\n  smbiosid \r\nfrom v_StatusMessage  msg\r\nleft join v_StatMsgWithInsStrings  strings\r\n  on msg.recordid = strings.recordid\r\nleft join attr\r\n  on msg.recordid = attr.recordid\r\n{{WHERE msg.$rising_column$ > ?}}
sourcetype = sccm:status_message
table = ta_sccm_statusmsg_dbinput
tail.rising.column = recordid
disabled = 1